#changing the server port
server.port=8088

#============= For Consumer =============#

#Consumer service runnig port
spring.kafka.consumer.bootstrap-servers=localhost:9092
#Consumer group
spring.kafka.consumer.group-id=stockGroup
spring.kafka.consumer.auto-offset-reset=earliest
#Using StringDeserializer class from kafka library to deserialize key, value in a message
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#For JSON
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=micro_streaming

#============= MySQL database specific properties =============
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:OrderStore}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:King@32911}

#ORM s/w specific properties
#Hibernate will refer this dialect to create the SQL statement to the respective databse vendor
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true;